double MedianOfArrays(vector<int>& arr1, vector<int>& arr2)
{
   if(arr2.size()<arr1.size())return MedianOfArrays(arr2,arr1);
   int m=arr1.size(),n=arr2.size(),l=0,h=m;
   while(l<=h){
       int mid=(l+h)/2;
       int cut1=mid;
       int cut2=(m+n+1)/2-cut1;
       int left1= cut1==0?INT_MIN:arr1[cut1-1];
       int left2= cut2==0?INT_MIN:arr2[cut2-1];
       int right1= cut1==m?INT_MAX:arr1[cut1];
       int right2= cut2==n?INT_MAX:arr2[cut2];
       if(left1<=right2 && left2<=right1){
           if((m+n)%2==1){
               return 1.0*max(left1,left2);
           }
           else{
               return 1.0*(max(left1,left2)+min(right1,right2))/2;
           }
       }
       else if(left1>right2){
           h=mid-1;
       }
       else l=mid+1;
   }
   return 0.0;
}
