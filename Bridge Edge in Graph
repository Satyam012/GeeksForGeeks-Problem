int cnt=0;
class Solution{
	public:
	void dfs(vector<bool>&vis,vector<int>v[],int c,int d){
	    vis[c]=true;
	    if(c==d){
	        cnt++;
	        return;
	    } 
	    else{
	        for(auto x:v[c]){
	            if(!vis[x]){
	                dfs(vis,v,x,d);
	            }
	        }
	    }
	}
    int isBridge(int V, vector<int> adj[], int c, int d) {
        vector<bool>vis(V+1,false);
        for(int i=0;i<adj[c].size();i++){
            if(adj[c][i]==d){
                adj[c].erase(adj[c].begin()+i);
            }
        }
        for(int i=0;i<adj[d].size();i++){
            if(adj[d][i]==c){
                adj[d].erase(adj[d].begin()+i);
            }
        }
        cnt=0;
        dfs(vis,adj,c,d);
        if(cnt==0)return 1;
        return 0;
    }
};
