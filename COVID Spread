
class Solution {
public:
    int helpaterp(vector<vector<int>> hospital)
    {
        int m=hospital.size(),n=hospital[0].size();
        vector<vector<bool>>vis(m,vector<bool>(n,false));
        queue<pair<int,int>>q;
        for(int i=0;i<m;i++)for(int j=0;j<n;j++)
        if(hospital[i][j]==2)q.push({i,j});
        int cnt=0;      
        while(!q.empty()){
            int l=q.size();
            for(int i=0;i<l;i++){
                pair<int,int>p=q.front();
                q.pop();
                int x=p.first,y=p.second;
                if(vis[x][y])continue;
                vis[x][y]=1;
                hospital[x][y]=2; 
                if(x-1>=0 && hospital[x-1][y]==1)q.push({x-1,y});
                if(y-1>=0 && hospital[x][y-1]==1)q.push({x,y-1});
                if(x+1<m && hospital[x+1][y]==1)q.push({x+1,y});
                if(y+1<n && hospital[x][y+1]==1)q.push({x,y+1});
            }
            cnt++;
        }       
        for(int i=0;i<m;i++)for(int j=0;j<n;j++)
        if(hospital[i][j]==1)return -1;
        
        return max(0,cnt-1);
    }
};
